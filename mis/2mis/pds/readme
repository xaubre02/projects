This file contains information about implemented chat network, its features and its usage.

==================== NODE ====================
Node daemon of the hybrid P2P chat network.

usage: pds18-node.py [-h] --id <node ID> --reg-ipv4 <IPv4> --reg-port <port>

optional arguments:
  -h, --help         show help and exit

Required arguments:
  --id <node ID>     Unique ID of the node on one host.
  --reg-ipv4 <IPv4>  IPv4 address of this registration node.
  --reg-port <port>  Port of this registration node. Allowed range: <0,65535>

Limitations/behaviour:
  After the node received command DISCONNECT, the node is not accepting UPDATE messages anymore,
  so no other node can connect to this one. Connection can be established after the command CONNECT.
  Then the node will accept UPDATE messages and other nodes can connect. In other words, command
  DISCONNECT will disconnect the node from network and is unreachable until the node receives
  command CONNECT.



==================== PEER ====================
Peer daemon of the hybrid P2P chat network.

usage: pds18-peer.py [-h] --id <peer ID> --username <user> --chat-ipv4 <IPv4>
                     --chat-port <port> --reg-ipv4 <IPv4> --reg-port <port>

optional arguments:
  -h, --help          show help and exit

Required arguments:
  --id <peer ID>      Unique ID of the peer on one host.
  --username <user>   Unique username identifying this peer in the chat room.
  --chat-ipv4 <IPv4>  IPv4 address for the chat room connectivity.
  --chat-port <port>  Port for the chat room connectivity. Allowed range: <0,65535>
  --reg-ipv4 <IPv4>   IPv4 address of the registration node.
  --reg-port <port>   Port of the registration node. Allowed range: <0,65535>


  
==================== RPC =====================
RPC of the hybrid P2P chat network. Used to control nodes and peers on the same workstation.

usage: pds18-rpc.py [-h] --id <app ID> --command <command> (--node | --peer)
                    [--reg-ipv4 <IPv4>] [--reg-port <port>]
                    [--from <username1>] [--to <username2>]
                    [--message <message>]

Required arguments:
  --id <app ID>        Unique ID of the peer/node on one host.
  --command <command>  Command for the specified peer/node.
  --node or --peer     Connect to the node or peer.

Optional arguments:
  -h, --help           Show help and exit.
  --reg-ipv4 <IPv4>    IPv4 address of the registration node.
  --reg-port <port>    Port of the registration node. Allowed range: <0,65535>.
  --from <username1>   User who will send a message.
  --to <username2>     User who will receive a message.
  --message <message>  A message to be send to the specified user.

Limitations/behaviour:
  RPC checks whether user specified all required arguments for specified command, then
  tries to connect to the specified node or peer, send the command and exits. RPC will not print
  any messages/status nor waits for the response. RPC simply sends a command and doesn't care 
  what will happen. All information and outputs are printed on the node and peer side.

Supported commands:
  --peer --command message --from <username1> --to <username2> --message <content>
  --peer --command reconnect --reg-ipv4 <IP> --reg-port <port>
  --peer --command getlist
  --peer --command peers'

  --node --command connect --reg-ipv4 <IP> --reg-port <port>
  --node --command disconnect
  --node --command neighbors
  --node --command database
  --node --command sync

  Read the documentation for more details.



================== TESTING ===================
Testing with:

xbedna62 : Bednařík David
xbarto87 : Bartoš Stanislav


Sequence of commands:

 1. pds18-node.py --id node0 --reg-ipv4 147.229.176.19 --reg-port 50000
 2. pds18-node.py --id node1 --reg-ipv4 147.229.176.19 --reg-port 50001
 3. pds18-peer.py --id peer0 --username xaubre02 --chat-ipv4 147.229.176.19 --chat-port 60000 --reg-ipv4 147.229.176.19 --reg-port 50000              
 4. pds18-peer.py --id peer1 --username xaubre03 --chat-ipv4 147.229.176.19 --chat-port 60001 --reg-ipv4 147.229.176.19 --reg-port 50000
 5. pds18-rpc.py --id node1 --node --command connect --reg-ipv4 147.229.176.19 --reg-port 50000
 6. pds18-rpc.py --id node0 --node --command neighbors
 7. pds18-rpc.py --id node1 --node --command neighbors
 8. pds18-rpc.py --id node0 --node --command database
 9. pds18-rpc.py --id node1 --node --command database
10. pds18-rpc.py --id peer0 --peer --command message --message "Ahoj" --from xaubre02 --to xaubre03
11. pds18-rpc.py --id peer1 --peer --command message --message "Nazdar" --from xaubre03 --to xaubre02
12. pds18-rpc.py --id peer0 --peer --command reconnect --reg-ipv4 147.229.176.19 --reg-port 50001
13. pds18-rpc.py --id node0 --node --command database
14. pds18-rpc.py --id node1 --node --command database
15. pds18-rpc.py --id peer0 --peer --command message --message "funguje to.." --from xaubre02 --to xaubre03
16. pds18-rpc.py --id peer1 --peer --command message --message "spis ne.." --from xaubre03 --to xaubre02
17. pds18-rpc.py --id node1 --node --command connect --reg-ipv4 147.229.93.117 --reg-port 12000                      (Bartoš Stanislav)
18. pds18-rpc.py --id node0 --node --command neighbors
19. pds18-rpc.py --id node1 --node --command neighbors
20. pds18-rpc.py --id peer0 --peer --command message --message "Ahoj" --from xaubre02 --to xbarto87
21. pds18-rpc.py --id peer1 --peer --command reconnect --reg-ipv4 147.229.176.19 --reg-port 6500                     (Bednařík David)
22. pds18-rpc.py --id peer1 --peer --command message --message "Ahoj" --from xaubre03 --to xaubre02
23. SIGINT on peer0
24. pds18-rpc.py --id node0 --node --command database
25. pds18-rpc.py --id node1 --node --command database
26. pds18-rpc.py --id peer1 --peer --command message --message "Ahoj" --from xaubre03 --to xaubre02
27. pds18-rpc.py --id node0 --node --command disconnect
28. pds18-rpc.py --id node0 --node --command connect --reg-ipv4 147.229.93.117 --reg-port 12000
29. pds18-rpc.py --id node0 --node --command database
30. pds18-rpc.py --id node1 --node --command database
31. SIGINT on peer1
32. SIGINT on node1
33. pds18-peer.py --id peer1 --username xaubre03 --chat-ipv4 147.229.176.19 --chat-port 60001 --reg-ipv4 147.229.176.19 --reg-port 50000
34. pds18-rpc.py --id peer1 --peer --command peers
35. pds18-node.py --id node2 --reg-ipv4 147.229.176.19 --reg-port 50002
36. pds18-node.py --id node3 --reg-ipv4 147.229.176.19 --reg-port 50003
37. pds18-peer.py --id peer2 --username xaubre04 --chat-ipv4 147.229.176.19 --chat-port 60002 --reg-ipv4 147.229.176.19 --reg-port 50002              
38. pds18-peer.py --id peer3 --username xaubre05 --chat-ipv4 147.229.176.19 --chat-port 60003 --reg-ipv4 147.229.176.19 --reg-port 50003
39. pds18-rpc.py --id node3 --node --command connect --reg-ipv4 147.229.176.19 --reg-port 50000
40. pds18-rpc.py --id node0 --node --command database
41. pds18-rpc.py --id node2 --node --command database
42. pds18-rpc.py --id node3 --node --command database
43. pds18-rpc.py --id node0 --node --command neighbors
44. pds18-rpc.py --id node2 --node --command neighbors
45. pds18-rpc.py --id node3 --node --command neighbors

